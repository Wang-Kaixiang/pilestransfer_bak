package com.piles.test;

import com.piles.common.entity.type.TradeType;
import com.piles.common.util.BytesUtil;
import com.piles.record.domain.UploadRecord;
import com.piles.record.entity.HeartBeatRequest;
import com.piles.record.entity.XunDaoUploadRecordRequest;
import com.piles.record.service.IHeartBeatService;
import org.springframework.stereotype.Service;

import java.util.Date;


@Service
public class HearBeatServiceImpl implements IHeartBeatService {
    @Override
    public Date heartBeat(HeartBeatRequest heartBeatRequest) {
        return new Date(  );
    }

    public static void main(String[] args) {
        byte[] bytes2 = BytesUtil.rightPadBytes(String.valueOf("1234").getBytes(), 16, (byte) 0x00);
        System.out.println(new String(bytes2));
        byte[] bytes = new byte[]{0x1, 0x0, 0x0, 0x20, 0x0, 0x0, 0x0, 0x0, 0x31, 0x32, 0x33, 0x34, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x78, 0x69, 0xf, 0x10, 0xd, 0x1, 0x12, 0x38, 0x4a, 0x10, 0x10, 0xd, 0x1, 0x12, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x2, 0x0, 0x11, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x11, 0x0, 0x0, 0x6, 0x31, 0x32, 0x33, 0x34, 0x35, 0x35, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0
        };


        UploadRecordService uploadRecordService = new UploadRecordService();
        uploadRecordService.uploadRecord(buildServiceEntity(XunDaoUploadRecordRequest.packEntity(bytes)));
    }

    public static UploadRecord buildServiceEntity(XunDaoUploadRecordRequest uploadRecordRequest) {
        UploadRecord uploadRecord = new UploadRecord();
        uploadRecord.setTradeTypeCode(TradeType.XUN_DAO.getCode());
        uploadRecord.setOrderNo(uploadRecordRequest.getOrderNo());
        uploadRecord.setPileNo(uploadRecordRequest.getPileNo());
        uploadRecord.setEndReason(uploadRecordRequest.getStopChargeReason());
        uploadRecord.setTotalAmmeterDegree(uploadRecordRequest.getTotalAmmeterDegree());
        return uploadRecord;
    }
}
